name: Update ToolHive Models

on:
  schedule:
    # Run every day at midnight UTC
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: update-thv-models
  cancel-in-progress: true

jobs:
  update-models:
    name: Update ToolHive API Models
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install ToolHive
        uses: StacklokLabs/toolhive-actions/install@6a095f99aa2fd6cd92cf0bb94bdf509b99820c06 # v0.0.3

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
        with:
          enable-cache: true
          python-version: '3.13'

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.44.1

      - name: Start ToolHive Server
        run: |
          echo "Starting thv serve --openapi on port 8080..."
          thv serve --openapi --port 8080 &
          THV_PID=$!
          echo "THV_PID=$THV_PID" >> $GITHUB_ENV
          echo "thv serve started with PID: $THV_PID"

          echo "Waiting for thv serve to be ready..."
          MAX_ATTEMPTS=30
          for i in $(seq 1 $MAX_ATTEMPTS); do
            # Check if the process is still running
            if ! kill -0 "$THV_PID" 2>/dev/null; then
              wait "$THV_PID" || true
              exit_code=$?
              echo "ERROR: thv serve process (PID: $THV_PID) exited unexpectedly with code $exit_code"
              exit $exit_code
            fi

            # Check if endpoint returns valid JSON with expected content
            if response=$(curl -s --max-time 5 http://127.0.0.1:8080/api/openapi.json 2>&1); then
              # Validate JSON
              if echo "$response" | python3 -m json.tool > /dev/null 2>&1; then
                # Check for openapi field
                if echo "$response" | grep -q "openapi"; then
                  echo "thv serve is ready!"
                  break
                else
                  echo "Attempt $i/$MAX_ATTEMPTS: Response doesn't contain 'openapi' field"
                fi
              else
                echo "Attempt $i/$MAX_ATTEMPTS: Invalid JSON response"
              fi
            else
              echo "Attempt $i/$MAX_ATTEMPTS: curl failed"
            fi

            if [ $i -eq $MAX_ATTEMPTS ]; then
              echo "ERROR: thv serve did not become ready after $MAX_ATTEMPTS attempts"
              echo "Last response: $response"
              # Kill the process if it's still running
              kill "$THV_PID" 2>/dev/null || true
              exit 1
            fi
            sleep 1
          done

      - name: Generate ToolHive Models
        env:
          MANAGE_THV: "false"
        run: task generate-thv-models

      - name: Stop ToolHive Server
        if: always()
        run: |
          if [ -n "$THV_PID" ] && kill -0 "$THV_PID" 2>/dev/null; then
            echo "Stopping thv serve (PID: $THV_PID)..."
            kill "$THV_PID" 2>/dev/null || true
            wait "$THV_PID" 2>/dev/null || true
            echo "thv serve stopped"
          else
            echo "thv serve process not running or already stopped"
          fi

      - name: Check for Changes
        id: check-changes
        run: |
          if git diff --quiet && git diff --cached --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check-changes.outputs.has_changes == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Update ToolHive API models

            Automated update of ToolHive API models from OpenAPI specification.
          branch: update-thv-models-${{ github.run_id }}
          base: main
          delete-branch: true
          title: 'chore: Update ToolHive API models'
          body: |
            ## Summary
            This PR updates the ToolHive API models generated from the latest OpenAPI specification.

            ## Changes
            - Updated Pydantic models in `src/mcp_optimizer/toolhive/api_models/`

            ## Notes
            - This PR was automatically generated by the [update-thv-models workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - The models are generated using `datamodel-codegen` from ToolHive's OpenAPI endpoint

            ü§ñ Generated with [GitHub Actions](https://github.com/features/actions)
          labels: |
            automated
            dependencies

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const runUrl = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;

            // Create an issue to notify about the failure
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '‚ö†Ô∏è ToolHive Model Update Workflow Failed',
              body: `## Workflow Failure Alert

            The automated ToolHive model update workflow has failed.

            **Details:**
            - Workflow: \`${{ github.workflow }}\`
            - Run ID: \`${{ github.run_id }}\`
            - Triggered by: \`${{ github.event_name }}\`
            - Branch: \`${{ github.ref_name }}\`

            **Action Required:**
            Please investigate the failure and fix any issues with the model generation process.

            [View Failed Workflow Run](${runUrl})`,
              labels: ['automated', 'bug', 'ci-failure']
            });
