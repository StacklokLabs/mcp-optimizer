mcpserver:
  name: mcp-optimizer
  namespace: toolhive-system
  
  image:
    repository: mcp-optimizer
    tag: "0.1.0"
    pullPolicy: Never
  
  transport: stdio
  port: 9900
  
  # Pod template spec with emptyDir volume for /tmp and env vars in proper env section
  podTemplateSpec:
    spec:
      volumes:
        - name: tmp
          emptyDir: {}
      containers:
        - name: mcp
          securityContext:
            readOnlyRootFilesystem: false
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          env:
            - name: RUNTIME_MODE
              value: "k8s"
            - name: K8S_ALL_NAMESPACES
              value: "true"
            - name: MCP_PORT
              value: "9900"
            - name: LOG_LEVEL
              value: "INFO"
            - name: WORKLOAD_POLLING_INTERVAL
              value: "60"
            - name: REGISTRY_POLLING_INTERVAL
              value: "300"
            - name: MAX_TOOLS_TO_RETURN
              value: "8"
            - name: MAX_SERVERS_TO_RETURN
              value: "5"
            - name: HYBRID_SEARCH_SEMANTIC_RATIO
              value: "0.5"
            - name: ASYNC_DB_URL
              value: "sqlite+aiosqlite:////tmp/mcp_optimizer.db"
            - name: DB_URL
              value: "sqlite:////tmp/mcp_optimizer.db"
  
  resources:
    limits:
      cpu: "1000m"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "256Mi"
  
  # No env here - using podTemplateSpec.spec.containers[].env instead
  env: []
  
  # No volumes - using podTemplateSpec for volume management
  volumes: []
  
  labels: {}
  annotations: {}

serviceAccount:
  create: true
  annotations: {}
  name: ""
  labels: {}

rbac:
  create: true
  rules:
    - apiGroups: ["toolhive.stacklok.dev"]
      resources: ["mcpservers"]
      verbs: ["get", "list", "watch"]

database:
  type: sqlite
  sqlite:
    path: /tmp/mcp_optimizer.db

persistence:
  enabled: false
