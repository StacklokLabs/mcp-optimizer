# generated by datamodel-codegen:
#   filename:  http://127.0.0.1:8080/api/openapi.json
#   timestamp: 2025-09-30T12:49:55+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class Config(BaseModel):
    enable_prometheus_metrics_path: Optional[bool] = Field(
        None,
        alias='enablePrometheusMetricsPath',
        description='EnablePrometheusMetricsPath controls whether to expose Prometheus-style /metrics endpoint\nThe metrics are served on the main transport port at /metrics\nThis is separate from OTLP metrics which are sent to the Endpoint',
    )
    endpoint: Optional[str] = Field(
        None, description='Endpoint is the OTLP endpoint URL'
    )
    environment_variables: Optional[list[str]] = Field(
        None,
        alias='environmentVariables',
        description='EnvironmentVariables is a list of environment variable names that should be\nincluded in telemetry spans as attributes. Only variables in this list will\nbe read from the host machine and included in spans for observability.\nExample: []string{"NODE_ENV", "DEPLOYMENT_ENV", "SERVICE_VERSION"}',
    )
    headers: Optional[dict[str, str]] = Field(
        None,
        description='Headers contains authentication headers for the OTLP endpoint',
    )
    insecure: Optional[bool] = Field(
        None,
        description='Insecure indicates whether to use HTTP instead of HTTPS for the OTLP endpoint',
    )
    metrics_enabled: Optional[bool] = Field(
        None,
        alias='metricsEnabled',
        description='MetricsEnabled controls whether OTLP metrics are enabled\nWhen false, OTLP metrics are not sent even if an endpoint is configured\nThis is independent of EnablePrometheusMetricsPath',
    )
    sampling_rate: Optional[float] = Field(
        None,
        alias='samplingRate',
        description='SamplingRate is the trace sampling rate (0.0-1.0)\nOnly used when TracingEnabled is true',
    )
    service_name: Optional[str] = Field(
        None,
        alias='serviceName',
        description='ServiceName is the service name for telemetry',
    )
    service_version: Optional[str] = Field(
        None,
        alias='serviceVersion',
        description='ServiceVersion is the service version for telemetry',
    )
    tracing_enabled: Optional[bool] = Field(
        None,
        alias='tracingEnabled',
        description='TracingEnabled controls whether distributed tracing is enabled\nWhen false, no tracer provider is created even if an endpoint is configured',
    )
