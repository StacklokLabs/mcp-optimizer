# generated by datamodel-codegen:
#   filename:  http://127.0.0.1:8080/api/openapi.json
#   timestamp: 2025-09-30T12:49:55+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class OutboundNetworkPermissions(BaseModel):
    allow_host: Optional[list[str]] = Field(
        None, description='AllowHost is a list of allowed hosts'
    )
    allow_port: Optional[list[int]] = Field(
        None, description='AllowPort is a list of allowed ports'
    )
    insecure_allow_all: Optional[bool] = Field(
        None, description='InsecureAllowAll allows all outbound network connections'
    )


class NetworkPermissions(BaseModel):
    outbound: Optional[OutboundNetworkPermissions] = None


class Profile(BaseModel):
    name: Optional[str] = Field(None, description='Name is the name of the profile')
    network: Optional[NetworkPermissions] = None
    privileged: Optional[bool] = Field(
        None,
        description='Privileged indicates whether the container should run in privileged mode\nWhen true, the container has access to all host devices and capabilities\nUse with extreme caution as this removes most security isolation',
    )
    read: Optional[list[str]] = Field(
        None,
        description='Read is a list of mount declarations that the container can read from\nThese can be in the following formats:\n- A single path: The same path will be mounted from host to container\n- host-path:container-path: Different paths for host and container\n- resource-uri:container-path: Mount a resource identified by URI to a container path',
    )
    write: Optional[list[str]] = Field(
        None,
        description='Write is a list of mount declarations that the container can write to\nThese follow the same format as Read mounts but with write permissions',
    )
