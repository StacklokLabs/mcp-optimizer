# generated by datamodel-codegen:
#   filename:  http://127.0.0.1:8080/api/openapi.json
#   timestamp: 2025-09-30T12:49:55+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class TokenValidatorConfig(BaseModel):
    allow_private_ip: Optional[bool] = Field(
        None,
        alias='allowPrivateIP',
        description='AllowPrivateIP allows JWKS/OIDC endpoints on private IP addresses',
    )
    audience: Optional[str] = Field(
        None, description='Audience is the expected audience for the token'
    )
    auth_token_file: Optional[str] = Field(
        None,
        alias='authTokenFile',
        description='AuthTokenFile is the path to file containing bearer token for authentication',
    )
    cacert_path: Optional[str] = Field(
        None,
        alias='cacertPath',
        description='CACertPath is the path to the CA certificate bundle for HTTPS requests',
    )
    client_id: Optional[str] = Field(
        None, alias='clientID', description='ClientID is the OIDC client ID'
    )
    client_secret: Optional[str] = Field(
        None,
        alias='clientSecret',
        description='ClientSecret is the optional OIDC client secret for introspection',
    )
    introspection_url: Optional[str] = Field(
        None,
        alias='introspectionURL',
        description='IntrospectionURL is the optional introspection endpoint for validating tokens',
    )
    issuer: Optional[str] = Field(
        None,
        description='Issuer is the OIDC issuer URL (e.g., https://accounts.google.com)',
    )
    jwksurl: Optional[str] = Field(
        None, description='JWKSURL is the URL to fetch the JWKS from'
    )
    resource_url: Optional[str] = Field(
        None,
        alias='resourceURL',
        description='ResourceURL is the explicit resource URL for OAuth discovery (RFC 9728)',
    )
