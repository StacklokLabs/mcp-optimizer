# generated by datamodel-codegen:
#   filename:  http://127.0.0.1:8080/api/openapi.json
#   timestamp: 2025-10-24T12:14:20+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class Config(BaseModel):
    component: Optional[str] = Field(
        None, description='Component is the component name to use in audit events'
    )
    event_types: Optional[list[str]] = Field(
        None,
        description='EventTypes specifies which event types to audit. If empty, all events are audited.',
    )
    exclude_event_types: Optional[list[str]] = Field(
        None,
        description='ExcludeEventTypes specifies which event types to exclude from auditing.\nThis takes precedence over EventTypes.',
    )
    include_request_data: Optional[bool] = Field(
        None,
        description='IncludeRequestData determines whether to include request data in audit logs',
    )
    include_response_data: Optional[bool] = Field(
        None,
        description='IncludeResponseData determines whether to include response data in audit logs',
    )
    log_file: Optional[str] = Field(
        None,
        description='LogFile specifies the file path for audit logs. If empty, logs to stdout.',
    )
    max_data_size: Optional[int] = Field(
        None,
        description='MaxDataSize limits the size of request/response data included in audit logs (in bytes)',
    )
